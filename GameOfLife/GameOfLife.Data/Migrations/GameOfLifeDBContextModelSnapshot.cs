// <auto-generated />
using System;
using GameOfLife.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GameOfLife.Data.Migrations
{
    [DbContext(typeof(GameOfLifeDBContext))]
    partial class GameOfLifeDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GameOfLife.Data.Models.Board", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AliveCellsJson")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<int>("Columns")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CurrentGeneration")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdateDatetime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Rows")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Board", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
